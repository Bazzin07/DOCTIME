{"ast":null,"code":"var _jsxFileName = \"D:\\\\doctime-f\\\\doctime\\\\src\\\\components\\\\dashboard\\\\containers\\\\herosection.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeroSection = () => {\n  _s();\n  const [hospitalData, setHospitalData] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [results, setResults] = useState([]);\n  useEffect(() => {\n    fetch(\"/path/to/hospitals.json\").then(response => response.json()).then(data => {\n      setHospitalData(data);\n      setResults(data);\n    });\n  }, []);\n  const handleSearch = event => {\n    const value = event.target.value.toLowerCase();\n    setSearchTerm(value);\n    const filteredResults = hospitalData.filter(hospital => hospital.name.toLowerCase().includes(value) || hospital.address.toLowerCase().includes(value) || hospital.type.toLowerCase().includes(value));\n    setResults(filteredResults);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"h-32 w-1/3 \",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"w-full p-2 border rounded mb-4\",\n        placeholder: \"Search hospitals or clinics...\",\n        value: searchTerm,\n        onChange: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: results.length > 0 ? results.map((hospital, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 mb-2 border rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-semibold\",\n            children: hospital.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: hospital.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-500\",\n            children: hospital.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No results found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(HeroSection, \"qDsI/hi92uuqutiOcDOBIMkYHQs=\");\n_c = HeroSection;\nexport default HeroSection;\nvar _c;\n$RefreshReg$(_c, \"HeroSection\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","HeroSection","_s","hospitalData","setHospitalData","searchTerm","setSearchTerm","results","setResults","fetch","then","response","json","data","handleSearch","event","value","target","toLowerCase","filteredResults","filter","hospital","name","includes","address","type","children","className","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","length","map","index","_c","$RefreshReg$"],"sources":["D:/doctime-f/doctime/src/components/dashboard/containers/herosection.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst HeroSection = () => {\r\n  const [hospitalData, setHospitalData] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [results, setResults] = useState([]);\r\n\r\n  useEffect(() => {\r\n    \r\n    fetch(\"/path/to/hospitals.json\")\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setHospitalData(data);\r\n        setResults(data); \r\n      });\r\n  }, []);\r\n\r\n  const handleSearch = (event) => {\r\n    const value = event.target.value.toLowerCase();\r\n    setSearchTerm(value);\r\n\r\n    const filteredResults = hospitalData.filter(hospital => \r\n      hospital.name.toLowerCase().includes(value) || \r\n      hospital.address.toLowerCase().includes(value) ||\r\n      hospital.type.toLowerCase().includes(value)\r\n    );\r\n\r\n    setResults(filteredResults);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    <section className=\"h-32 w-1/3 \">\r\n      <input\r\n        type=\"text\"\r\n        className=\"w-full p-2 border rounded mb-4\"\r\n        placeholder=\"Search hospitals or clinics...\"\r\n        value={searchTerm}\r\n        onChange={handleSearch}\r\n      />\r\n      \r\n      <div>\r\n        {results.length > 0 ? (\r\n          results.map((hospital, index) => (\r\n            <div key={index} className=\"p-4 mb-2 border rounded\">\r\n              <h2 className=\"text-lg font-semibold\">{hospital.name}</h2>\r\n              <p>{hospital.address}</p>\r\n              <span className=\"text-sm text-gray-500\">{hospital.type}</span>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No results found</p>\r\n        )}\r\n      </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeroSection;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}