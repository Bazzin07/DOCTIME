{"ast":null,"code":"var _jsxFileName = \"D:\\\\doctime-f\\\\doctime\\\\src\\\\components\\\\payment\\\\payment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Payment = () => {\n  _s();\n  const {\n    type,\n    id,\n    doctorName\n  } = useParams(); // type: hospital or clinic\n  const [appointmentDetails, setAppointmentDetails] = useState(null);\n  const [appointmentSlot, setAppointmentSlot] = useState(null);\n  const [isPaymentDone, setIsPaymentDone] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Fetch hospital/clinic and doctor data from JSON\n    fetch(\"/doctorsdetails.json\").then(response => response.json()).then(data => {\n      let selectedDoctor;\n      let appointmentData;\n      if (type === \"hospital\") {\n        const hospital = data.hospitals[id];\n        selectedDoctor = hospital.doctors.find(doctor => doc.name === doctorName);\n        appointmentData = {\n          name: hospital.name,\n          doctor: selectedDoctor\n        };\n      } else if (type === \"clinic\") {\n        const clinic = data.clinics[id];\n        selectedDoctor = clinic.doctor;\n        appointmentData = {\n          name: clinic.name,\n          doctor: selectedDoctor\n        };\n      }\n      setAppointmentDetails(appointmentData);\n\n      // Fetch appointment count from localStorage for slot assignment\n      const currentSlot = localStorage.getItem(`${doctorName}-appointments`) || 0;\n      setAppointmentSlot(Number(currentSlot) + 1);\n    });\n  }, [id, doctorName, type]);\n  const handlePayment = () => {\n    // Simulate payment and store appointment details in localStorage\n    setIsPaymentDone(true);\n\n    // Store the appointment slot in localStorage\n    localStorage.setItem(`${doctorName}-appointments`, appointmentSlot);\n\n    // Save the appointment details to localStorage for the confirmation page\n    const savedAppointment = {\n      name: appointmentDetails.name,\n      doctor: appointmentDetails.doctor.name,\n      specialty: appointmentDetails.doctor.specialty,\n      charges: appointmentDetails.doctor.charges,\n      timings: appointmentDetails.doctor.timings,\n      slot: appointmentSlot\n    };\n    localStorage.setItem('appointment-info', JSON.stringify(savedAppointment));\n\n    // Redirect to confirmation page\n    navigate(`/appointment/confirmation`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen text-white p-6\",\n    children: appointmentDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold\",\n        children: [\"Payment for \", appointmentDetails.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl\",\n        children: [\"Doctor: \", appointmentDetails.doctor.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Specialty: \", appointmentDetails.doctor.specialty]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Charges: $\", appointmentDetails.doctor.charges]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Timing: \", appointmentDetails.doctor.timings]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Appointment Slot: \", appointmentSlot]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), !isPaymentDone ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePayment,\n        className: \"mt-4 bg-green-500 p-2 rounded-lg\",\n        children: \"Confirm Payment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-4 text-lg text-green-400\",\n        children: \"Payment Successful!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Payment, \"8Us6+u67b4T6t6bIZ1b1AfpBCh4=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Payment;\nexport default Payment;\nvar _c;\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","jsxDEV","_jsxDEV","Payment","_s","type","id","doctorName","appointmentDetails","setAppointmentDetails","appointmentSlot","setAppointmentSlot","isPaymentDone","setIsPaymentDone","navigate","fetch","then","response","json","data","selectedDoctor","appointmentData","hospital","hospitals","doctors","find","doctor","doc","name","clinic","clinics","currentSlot","localStorage","getItem","Number","handlePayment","setItem","savedAppointment","specialty","charges","timings","slot","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/doctime-f/doctime/src/components/payment/payment.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\nconst Payment = () => {\r\n  const { type, id, doctorName } = useParams(); // type: hospital or clinic\r\n  const [appointmentDetails, setAppointmentDetails] = useState(null);\r\n  const [appointmentSlot, setAppointmentSlot] = useState(null);\r\n  const [isPaymentDone, setIsPaymentDone] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Fetch hospital/clinic and doctor data from JSON\r\n    fetch(\"/doctorsdetails.json\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        let selectedDoctor;\r\n        let appointmentData;\r\n        if (type === \"hospital\") {\r\n          const hospital = data.hospitals[id];\r\n          selectedDoctor = hospital.doctors.find(doctor => doc.name === doctorName);\r\n          appointmentData = { name: hospital.name, doctor: selectedDoctor };\r\n        } else if (type === \"clinic\") {\r\n          const clinic = data.clinics[id];\r\n          selectedDoctor = clinic.doctor;\r\n          appointmentData = { name: clinic.name, doctor: selectedDoctor };\r\n        }\r\n        setAppointmentDetails(appointmentData);\r\n\r\n        // Fetch appointment count from localStorage for slot assignment\r\n        const currentSlot = localStorage.getItem(`${doctorName}-appointments`) || 0;\r\n        setAppointmentSlot(Number(currentSlot) + 1);\r\n      });\r\n  }, [id, doctorName, type]);\r\n\r\n  const handlePayment = () => {\r\n    // Simulate payment and store appointment details in localStorage\r\n    setIsPaymentDone(true);\r\n\r\n    // Store the appointment slot in localStorage\r\n    localStorage.setItem(`${doctorName}-appointments`, appointmentSlot);\r\n\r\n    // Save the appointment details to localStorage for the confirmation page\r\n    const savedAppointment = {\r\n      name: appointmentDetails.name,\r\n      doctor: appointmentDetails.doctor.name,\r\n      specialty: appointmentDetails.doctor.specialty,\r\n      charges: appointmentDetails.doctor.charges,\r\n      timings: appointmentDetails.doctor.timings,\r\n      slot: appointmentSlot,\r\n    };\r\n    localStorage.setItem('appointment-info', JSON.stringify(savedAppointment));\r\n\r\n    // Redirect to confirmation page\r\n    navigate(`/appointment/confirmation`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-screen text-white p-6\">\r\n      {appointmentDetails && (\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold\">Payment for {appointmentDetails.name}</h2>\r\n          <h3 className=\"text-xl\">Doctor: {appointmentDetails.doctor.name}</h3>\r\n          <p>Specialty: {appointmentDetails.doctor.specialty}</p>\r\n          <p>Charges: ${appointmentDetails.doctor.charges}</p>\r\n          <p>Timing: {appointmentDetails.doctor.timings}</p>\r\n          <p>Appointment Slot: {appointmentSlot}</p>\r\n\r\n          {!isPaymentDone ? (\r\n            <button onClick={handlePayment} className=\"mt-4 bg-green-500 p-2 rounded-lg\">\r\n              Confirm Payment\r\n            </button>\r\n          ) : (\r\n            <p className=\"mt-4 text-lg text-green-400\">Payment Successful!</p>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Payment;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}